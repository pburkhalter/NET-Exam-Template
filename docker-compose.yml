version: '3.8'

services:
  webapp:
    container_name: webapp
    hostname: webapp
    build: ./webapp
    environment:
      APP_DB_NAME: ${POSTGRES_DB}
      APP_DB_USER: ${POSTGRES_USER}
      APP_DB_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - internal_network
    volumes:
      - ./webapp/app:/usr/src/app:ro # webapp (mounted as read-only)
    depends_on:
      - postgres # Ensure postgres starts first
    restart: always

  postgres:
    container_name: proxy
    hostname: proxy
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - internal_network
    volumes:
      - postgres_data:/var/lib/postgresql/app
    restart: always

  nginx:
    container_name: proxy
    hostname: proxy
    image: nginx:latest
    environment:
      - NGINX_PORT=80
    ports:
      - "8080:80"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./nginx/__nginx.conf:/etc/nginx/__nginx.conf:ro # Nginx config (mounted as read-only)
    depends_on:
      - webapp # Ensure webapp starts first
    restart: always

networks:
  internal_network:
    driver: bridge
    internal: true
  external_network:
    driver: bridge
    external: true

volumes:
  postgres_data:
    driver: local
